{"version":3,"sources":["components/widgets/WeekWeather.tsx","components/widgets/DayWeather.tsx","components/HomePage.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["WeekWeather","useState","setSelectedOption","className","placeholder","onChange","options","value","label","DayWeather","HomePage","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"0PAmCeA,MA9Bf,WACE,IAMA,EAA4CC,mBAAc,IAA1D,mBAAuBC,GAAvB,WACA,OACE,sBAAKC,UAAU,UAAf,UACE,oBAAIA,UAAU,kBAAd,6BAGA,qBAAKA,UAAU,mBAAf,SACE,cAAC,IAAD,CACEC,YAAY,cACZC,SAAUH,EACVI,QAhBQ,CACd,CAAEC,MAAO,mBAAoBC,MAAO,oBACpC,CAAED,MAAO,UAAWC,MAAO,WAC3B,CAAED,MAAO,SAAUC,MAAO,UAC1B,CAAED,MAAO,UAAWC,MAAO,YAarBL,UAAU,sBAGd,qBAAKA,UAAU,mBAAf,SACE,qBAAKA,UAAU,8BAAf,SACE,mBAAGA,UAAU,oCAAb,8ECcKM,MAtCf,WACE,IAMA,EAA4CR,mBAAc,IAA1D,mBAAuBC,GAAvB,WAEA,OACE,sBAAKC,UAAU,8BAAf,UACE,oBAAIA,UAAU,kBAAd,6CAGA,sBAAKA,UAAU,mBAAf,UACE,cAAC,IAAD,CACEC,YAAY,cACZC,SAAUH,EACVI,QAjBQ,CACd,CAAEC,MAAO,mBAAoBC,MAAO,oBACpC,CAAED,MAAO,UAAWC,MAAO,WAC3B,CAAED,MAAO,SAAUC,MAAO,UAC1B,CAAED,MAAO,UAAWC,MAAO,YAcrBL,UAAU,oBAEZ,cAAC,IAAD,CACEC,YAAY,cACZC,SAAUH,EAEVC,UAAU,uBAGd,qBAAKA,UAAU,mBAAf,SACE,qBAAKA,UAAU,8BAAf,SACE,mBAAGA,UAAU,oCAAb,8ECfKO,MAff,WACE,OACC,sBAAKP,UAAU,kCAAf,UACC,qBAAIA,UAAU,oBAAd,UACA,sBAAMA,UAAU,0BAAhB,qBACE,sBAAMA,UAAU,2BAAhB,yBAEF,sBAAKA,UAAU,qBAAf,UACA,cAAC,EAAD,IACE,cAAC,EAAD,WCHSQ,MARf,WACE,OACE,8BACE,cAAC,EAAD,OCSSC,EAZS,SAACC,GACnBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCHdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,K","file":"static/js/main.0b68ac5c.chunk.js","sourcesContent":["import React, {useState} from 'react';\nimport './Weather.scss'\nimport Select from 'react-select';\nimport { convertTypeAcquisitionFromJson } from 'typescript';\n\nfunction WeekWeather() {\n  const options = [\n    { value: 'sankt petersburg', label: 'Sankt Petersburg' },\n    { value: 'saratov', label: 'Saratov' },\n    { value: 'samara', label: 'Samara' },\n    { value: 'saransk', label: 'Saransk' },\n  ];\n  const [selectedOption, setSelectedOption] = useState<any>({});\n  return (\n    <div className=\"weather\">\n      <h1 className=\"weather__header\">\n        7 Days Forecast\n      </h1>\n      <div className=\"weather__selects\">\n        <Select\n          placeholder=\"Select city\"\n          onChange={setSelectedOption}\n          options={options}\n          className=\"weather__select\"\n        />\n      </div>\n      <div className=\"weather__content\">\n        <div className=\"weather__content__temp-icon\">\n          <p className=\"weather__content__temp-icon__text\">Fill in all the fields and the weather will be displayed</p>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default WeekWeather;\n","import React, {useState} from 'react';\nimport './Weather.scss'\nimport Select from 'react-select'\n\nfunction DayWeather() {\n  const options = [\n    { value: 'sankt petersburg', label: 'Sankt Petersburg' },\n    { value: 'saratov', label: 'Saratov' },\n    { value: 'samara', label: 'Samara' },\n    { value: 'saransk', label: 'Saransk' },\n  ];\n  const [selectedOption, setSelectedOption] = useState<any>({});\n\n  return (\n    <div className=\"weather weather--day-mobile\">\n      <h1 className=\"weather__header\">\n        Forecast for a Date in the Past\n      </h1>\n      <div className=\"weather__selects\">\n        <Select\n          placeholder=\"Select city\"\n          onChange={setSelectedOption}\n          options={options}\n          className=\"weather__select\"\n        />\n        <Select\n          placeholder=\"Select date\"\n          onChange={setSelectedOption}\n          // options={options}\n          className=\"weather__select\"\n          />\n      </div>\n      <div className=\"weather__content\">\n        <div className=\"weather__content__temp-icon\">\n          <p className=\"weather__content__temp-icon__text\">Fill in all the fields and the weather will be displayed</p>\n        </div>\n      </div>\n    </div>\n  );\n  \n}\n\nexport default DayWeather;\n ","import React from 'react';\nimport './HomePage.scss'\nimport WeekWeather from './widgets/WeekWeather'\nimport DayWeather from './widgets/DayWeather'\nfunction HomePage() {\n  return (\n\t  <div className=\"home-page home-page--background\">\n\t\t  <h1 className=\"home-page__header\">\n\t\t\t\t<span className=\"home-page__header_first\">Weather</span>\n\t\t\t  \t<span className=\"home-page__header_second\">forecast</span>\n\t\t  </h1>\n\t\t  <div className=\"home-page__weather\">\n\t\t\t\t<WeekWeather />\n\t\t  \t\t<DayWeather />\n\t\t\t</div>\n    </div>\n  );\n}\n\nexport default HomePage;\n","import React from 'react';\nimport HomePage from './components/HomePage'\nfunction App() {\n  return (\n    <div >\n      <HomePage />\n    </div>\n  );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}